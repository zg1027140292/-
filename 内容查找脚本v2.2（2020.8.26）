# -*- coding: UTF-8 –*-
import msvcrt
import time
import os
time_now = time.strftime('%Y-%m-%d %H:%M:%S')


path = os.getcwd()  #获取软件当前运行路径
print(path)
ifdir1 = os.path.isdir("结果")  #判断文件夹是否存在
if ifdir1 is False:  #如果文件夹不存在，则创建文件夹
    os.mkdir("结果")
with open("结果\结果.txt",'w') as f: #创建结果.txt来保存最终需要的结果
    path1 = os.path.realpath("结果\结果.txt")  #标记结果.txt的绝对路径，如果没有则创建

#=============================== 上述代码标记所有需要的路径 ====================================

FN = os.listdir(path) #获取文件名列表
count = 0
count_txt = 0
a = []
while True:
    title = '''
      ================================================
                             首页
            当前时间为：%s
       1、搜索单字符串（只能搜索某一个特定的内容，可多次搜索不同的特定内容）
       2、搜索拼接字符串 （可搜索多个文件中的相似内容)
      =============================作者：缘来画中人======
    ''' % time_now
    print(title)
    choose = input("请输入功能序列号：")
    if choose == "1":
        title1 = '''
          ================================================
                        单字符搜索工具
                当前时间为：%s
           1、输入“~”破浪键打开结果文件
           2、输入“~~”双破浪键返回上层菜单
          =============================作者：缘来画中人======
        ''' % time_now
        print(title1)
        while True:
            yesno = input("是否将搜索内容所在整行内容输出到结果文件中？（Y/N）：")
            if yesno == "y" or yesno == "n" or yesno == "Y" or yesno == "N":
                break
            else:
                print("您输入的命令有误，请重新输入（Y/N）")
                continue
        break_father = True
        while break_father == True:
            data = input("请输入要查找的内容：")
            count += 1
            if data == "~":
                os.system(path1)  # 自动打开结果文件
                print("已为您打开结果文件")
                continue
            if data == "~~":
                break
            with open(path1, 'a+', encoding='utf-8') as filetxt:
                print('👇👇👇👇👇👇👇👇以下是第%s次搜索的内容%s，%s 👇👇👇👇👇👇👇👇' % (count, data, time_now), file=filetxt)
                for filename in FN:
                    if os.path.splitext(filename)[1] in ('.txt','.log'):
                        path2 = (path+'/'+filename)
                        with open(os.path.join(path,filename),'r',encoding='utf-8') as f: #打开路径path下的所有文件
                            for line in f:
                                if data in line:
                                    a.append(line)
                                    count_txt +=1
                            if count_txt > 0:
                                print(filename, '==========>出现 %s 次数：%s 次' % (data, count_txt), file=filetxt)
                            if count_txt == 0:
                                print(filename,"==========>未发现当前搜索内容", file=filetxt)
                            count_txt = 0
                            f.close
                        if yesno == "Y" or yesno == "y":
                            for i in a:
                                print("%s" % i, file=filetxt)
                        elif yesno == 'N' or yesno == "n":
                            pass
                        else:

                            a.clear()
                print("已将结果输出到“结果.txt”文件中，请输入“~”波浪键查看内容。")
    if choose == "2":
        title2 = '''
              ================================================
                                拼接搜索工具
                    当前时间为：%s
               1、想要搜索多个文件中的相似内容
               例如：文件1中有“我喜欢52论坛”，文件2中有“我喜欢另一个论坛”，
               此时搜索“我喜欢”+“论坛”。
               2、输入“~”破浪键打开结果文件
               3、输入“~~”双破浪键返回上层菜单
              =============================作者：缘来画中人======
            ''' % time_now
        print(title2)
        while True:
            yesno = input("是否将搜索内容所在整行内容输出到结果文件中？（Y/N）：")
            if yesno == "y" or yesno == "n" or yesno == "Y" or yesno == "N":
                break
            else:
                print("您输入的命令有误，请重新输入（Y/N）")
                continue
        break_father = True
        while break_father == True:
            while break_father == True:
                data1 = input("请输入要搜索的头内容：")
                if data1 == "~~"  :
                    break_father = False
                    pass
                elif data1 == "~":
                    os.system(path1)  # 自动打开结果文件
                    print("已为您打开结果文件")
                    pass
                else:
                    break
            if break_father == False:
                break
            data2 = input("请输入要搜索的尾内容：")
            count += 1
            with open(path1, 'a+', encoding='utf-8') as filetxt:
                print('👇👇👇👇👇👇以下是第%s次搜索的内容%s，%s 👇👇👇👇👇👇\n' % (count,(data1,"***",data2), time_now), file=filetxt)
                for filename in FN:
                    if os.path.splitext(filename)[1] in ('.txt','.log'):
                        path2 = (path+'/'+filename)
                        with open(os.path.join(path,filename),'r',encoding='utf-8') as f: #打开路径path下的所有文件
                            for line in f:
                                if data1 in line and data2 in line:
                                    a.append(line)
                                    count_txt +=1
                            if count_txt > 0:
                                print(filename, '==========>出现 %s 次数：%s 次' % ((data1, "***", data2), count_txt), "内容为：\n",file=filetxt)
                            if count_txt == 0:
                                print(filename,"==========>未发现当前搜索内容", file=filetxt)
                        if yesno == "Y" or yesno == "y":
                            for i in a:
                                print("%s" % i, file=filetxt)
                        elif yesno == 'N' or yesno == "n":
                            pass

                        a.clear()
                        count_txt = 0
                print("已将结果输出到“结果.txt”文件中，请输入“~”波浪键查看内容。")
